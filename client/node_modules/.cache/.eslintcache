[{"D:\\Neostore\\clint\\src\\index.js":"1","D:\\Neostore\\clint\\src\\App.js":"2","D:\\Neostore\\clint\\src\\reportWebVitals.js":"3","D:\\Neostore\\clint\\src\\component\\Nav.js":"4","D:\\Neostore\\clint\\src\\component\\Signup.js":"5","D:\\Neostore\\clint\\src\\component\\Login.js":"6","D:\\Neostore\\clint\\src\\config\\Myservices.js":"7","D:\\Neostore\\clint\\src\\config\\Url.js":"8","D:\\Neostore\\clint\\src\\component\\Forgetpassword.js":"9","D:\\Neostore\\clint\\src\\component\\Footer.js":"10","D:\\Neostore\\clint\\src\\component\\Home.js":"11","D:\\Neostore\\clint\\src\\component\\Changepassword.js":"12","D:\\Neostore\\clint\\src\\component\\Banner.js":"13","D:\\Neostore\\clint\\src\\component\\Products.js":"14","D:\\Neostore\\clint\\src\\component\\Profile.js":"15","D:\\Neostore\\clint\\src\\component\\Cart.js":"16","D:\\Neostore\\clint\\src\\config\\Proservice.js":"17","D:\\Neostore\\clint\\src\\Profilepage\\Address.js":"18","D:\\Neostore\\clint\\src\\Profilepage\\Newpass.js":"19","D:\\Neostore\\clint\\src\\component\\Productdetails.js":"20","D:\\Neostore\\clint\\src\\component\\Order.js":"21","D:\\Neostore\\clint\\src\\component\\Checkout.js":"22","D:\\Neostore\\clint\\src\\component\\Invoice.js":"23","D:\\Neostore\\clint\\src\\component\\Validation.js":"24"},{"size":547,"mtime":1640765274554,"results":"25","hashOfConfig":"26"},{"size":1828,"mtime":1642598746013,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":1878,"mtime":1642503729487,"results":"29","hashOfConfig":"26"},{"size":7426,"mtime":1642606890413,"results":"30","hashOfConfig":"26"},{"size":3201,"mtime":1642422388670,"results":"31","hashOfConfig":"26"},{"size":1071,"mtime":1642594986109,"results":"32","hashOfConfig":"26"},{"size":51,"mtime":1640936454610,"results":"33","hashOfConfig":"26"},{"size":2322,"mtime":1641724983058,"results":"34","hashOfConfig":"26"},{"size":1354,"mtime":1642332722890,"results":"35","hashOfConfig":"26"},{"size":1799,"mtime":1642606627259,"results":"36","hashOfConfig":"26"},{"size":1626,"mtime":1641728443204,"results":"37","hashOfConfig":"26"},{"size":926,"mtime":1642606215853,"results":"38","hashOfConfig":"26"},{"size":4594,"mtime":1642504361587,"results":"39","hashOfConfig":"26"},{"size":2460,"mtime":1642606337197,"results":"40","hashOfConfig":"26"},{"size":8593,"mtime":1642493616610,"results":"41","hashOfConfig":"26"},{"size":751,"mtime":1642495563366,"results":"42","hashOfConfig":"26"},{"size":9603,"mtime":1642492788416,"results":"43","hashOfConfig":"26"},{"size":3034,"mtime":1642594707001,"results":"44","hashOfConfig":"26"},{"size":5839,"mtime":1642506117240,"results":"45","hashOfConfig":"26"},{"size":3348,"mtime":1642596766812,"results":"46","hashOfConfig":"26"},{"size":4994,"mtime":1642494907179,"results":"47","hashOfConfig":"26"},{"size":7234,"mtime":1642596956557,"results":"48","hashOfConfig":"26"},{"size":4158,"mtime":1642438273894,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"14aow7a",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},"D:\\Neostore\\clint\\src\\index.js",[],["108","109"],"D:\\Neostore\\clint\\src\\App.js",["110","111"],"D:\\Neostore\\clint\\src\\reportWebVitals.js",[],"D:\\Neostore\\clint\\src\\component\\Nav.js",["112"],"import React from \"react\";\r\nimport {  Button, Container , Navbar,NavDropdown,Nav,Form,FormControl} from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function Nav1(){\r\n  const log = localStorage.getItem(\"_token\")\r\n /*  const logout=()=>{\r\n    localStorage.removeItem(\"_token\")\r\n    navigate(\"/login\")\r\n  } */\r\n  const navigate = useNavigate();\r\n    return(\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n  <Container fluid>\r\n    <Navbar.Brand href=\"/\">Neo<span style={{color:\"red\"}}>Store</span></Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n    <Navbar.Collapse id=\"navbarScroll\">\r\n      <Nav\r\n        className=\"me-auto my-2 my-lg-0\"\r\n        style={{ maxHeight: '100px' }}\r\n        navbarScroll\r\n      >\r\n        <Nav.Link href=\"/\">Home</Nav.Link>\r\n        \r\n        <Nav.Link href=\"/products\">Products</Nav.Link>\r\n        { log ?\r\n          <NavDropdown title=\"User\" id=\"navbarScrollingDropdown\">\r\n          <NavDropdown.Item href=\"/profile\">Profile</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"/logout\" >Logout</NavDropdown.Item>\r\n        \r\n        </NavDropdown>\r\n        \r\n        :\r\n        <NavDropdown title=\"User\" id=\"navbarScrollingDropdown\">\r\n          <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"/signup\">Signup</NavDropdown.Item>\r\n         \r\n        </NavDropdown>\r\n        }\r\n      </Nav>\r\n      <Form className=\"d-flex\">\r\n        <FormControl\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          className=\"me-2\"\r\n          aria-label=\"Search\"\r\n        />\r\n        \r\n        <Button variant=\"outline-success\">Search</Button>\r\n        <br></br>\r\n        <Nav.Link href=\"/cart\">Cart</Nav.Link>\r\n        \r\n        \r\n      </Form>\r\n    </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n        </div>\r\n    )\r\n}","D:\\Neostore\\clint\\src\\component\\Signup.js",["113","114"],"D:\\Neostore\\clint\\src\\component\\Login.js",["115","116"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Container,image } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Nav1 from \"./Nav\";\r\nimport { login } from \"../config/Myservices\";\r\nimport Footer from \"./Footer\";\r\n\r\n\r\n\r\n\r\nexport default function Loginpage() {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState({email:\"\",password:\"\"});\r\n  const handler=(event)=>{\r\n    const {name,value} = event.target;\r\n    setData({...data,[name]:value})\r\n}\r\n   const loginUser=(event)=>{\r\n    event.preventDefault();\r\n    console.log(data)\r\n    login(data).then(res=>{\r\n        if(res.data.err===0){\r\n            localStorage.setItem(\"_token\",res.data.token);\r\n            alert(res.data.msg)\r\n            navigate(\"/\")\r\n            console.log(res.data)\r\n        }\r\n        if(res.data.err===1){\r\n          alert(res.data.msg)\r\n            console.log(res.data)\r\n        } \r\n    })\r\n}\r\n\r\n /* const formlogin = (e)=>{\r\n   e.preventDefault();\r\n   login(values).then(res=>{\r\n     console.log(res)\r\n     if (res.data.err){\r\n       alert(res.data.err)\r\n     }\r\n     else{\r\n       alert(res.data.msg)\r\n       nevigate(\"/\")\r\n     }\r\n   })\r\n } */\r\n  return (\r\n    <>\r\n    <Nav1 />\r\n    <br/>\r\n    \r\n  \r\n   <Container>\r\n   \r\n      <Form \r\n        style={{\r\n          marginTop: \"5vh\",\r\n          marginLeft: \"40vh\",\r\n          width: \"100vh\",\r\n          border: \"1px solid black\",\r\n          padding: \"5vh\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <h2 className=\"text-center\">Login</h2>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Email address :</Form.Label>\r\n          <Form.Control type=\"text\" id=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={handler} />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Password :</Form.Label>\r\n          <Form.Control type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" onChange={handler} />\r\n        </Form.Group>\r\n\r\n        <div className=\"text-center\">\r\n          <Button variant=\"primary\" type=\"submit\" onClick={(event)=>loginUser(event)}>\r\n            Submit\r\n          </Button>\r\n\r\n          <br/>\r\n          \r\n          <Button\r\n            variant=\"link\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              navigate(\"/signup\");\r\n            }}\r\n          >\r\n            Don't have an account? Click Here\r\n          </Button>\r\n          <Button\r\n            variant=\"link\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              navigate(\"/forgetpass\");\r\n            }}\r\n          >\r\n            Forget Password\r\n          </Button>\r\n\r\n        \r\n        </div>\r\n        <div>\r\n        <Button\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            \r\n          >\r\n            Login With Facebook\r\n          </Button>\r\n          \r\n          <Button \r\n            variant=\"danger\"\r\n            type=\"button\"\r\n            >\r\n            Login With Google\r\n          </Button>\r\n        </div>\r\n        \r\n        \r\n      </Form>\r\n\r\n      <br></br>\r\n\r\n      \r\n         \r\n    </Container>\r\n    <div>\r\n      <Footer/>\r\n    </div>\r\n    </>\r\n  );\r\n}","D:\\Neostore\\clint\\src\\config\\Myservices.js",[],"D:\\Neostore\\clint\\src\\config\\Url.js",[],"D:\\Neostore\\clint\\src\\component\\Forgetpassword.js",[],"D:\\Neostore\\clint\\src\\component\\Footer.js",["117","118","119","120"],"import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <>\r\n        <footer class=\"bg-dark text-white pt-5 pb-4 \">\r\n<div className='main-footer'>\r\n<div className='container'>\r\n<div className='row'>\r\n\r\n   <div className='col-md-4 col-sm-6'>\r\n   <h4> About Company</h4>\r\n   <p>Neosoft tecnology is here to quick and easy for shopping</p>\r\n   \r\n   <h6>Contact Information</h6>\r\n   <ul className='list-unstyled'>\r\n   <li>Email:contact@neosoftmail.com</li>\r\n   <li>Phone:+910000000000</li>\r\n   <li>MUMBAI,INDIA</li>\r\n   </ul>\r\n</div>\r\n\r\n<div className='col-md-4 col-sm-6'>\r\n   <h4> Information</h4>\r\n   <a href='#'> Terms and Conditions</a><br/>\r\n   <a href='#'> Gurantee and Return Policy</a><br/>\r\n   <a href='#'> Contact Us</a><br/>\r\n   <a href='#'> Locate us</a><br/>\r\n\r\n\r\n  \r\n</div>\r\n<div className='col-md-4 col-sm-6'>\r\n    <h4>Newsletter</h4>\r\n    <p>Signup to get exclusive offer from our favorite brands and to be well up in the news</p>\r\n    \r\n    <input type=\"search\" placeholder='your email..'></input>\r\n    <br></br>\r\n    <br></br>\r\n    <button color='white'>Subscribe</button>\r\n</div>\r\n   \r\n</div>\r\n<div className='footer-bottom'></div>\r\n<p className='text-xs-center'>\r\n    Copyright 2017 NeoSOFT Technology All rights reserved| Design By Sandesh Umathe\r\n</p>\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n</footer>\r\n     </>\r\n    )\r\n}\r\n","D:\\Neostore\\clint\\src\\component\\Home.js",["121","122"],"D:\\Neostore\\clint\\src\\component\\Changepassword.js",[],"D:\\Neostore\\clint\\src\\component\\Banner.js",[],"D:\\Neostore\\clint\\src\\component\\Products.js",["123","124"],"import React, { useEffect } from 'react'\r\nimport Nav1 from \"./Nav\"\r\nimport Footer from \"./Footer\"\r\nimport {Card,Button,Row,Dropdown,Col} from 'react-bootstrap'\r\nimport { useState } from 'react'\r\nimport { getAllCategory, getAllColor, getProducts } from '../config/Proservice'\r\nimport {useNavigate } from 'react-router-dom'\r\n\r\n\r\nexport default function Products() {\r\n    const navigate = useNavigate();\r\n    const [product,setproduct]= useState([]);\r\n    const [item,setitem]=useState('');\r\n    const [color,setColor]=useState([]);\r\n    const [category,setCategory]=useState([]);\r\n    useEffect(()=>{\r\n        getProducts().then((res)=>{\r\n            console.log(res.data)\r\n            setproduct(res.data)\r\n        });\r\n        getAllColor().then(res=>{\r\n            setColor(res.data)\r\n        });\r\n        getAllCategory().then(res=>{\r\n            setCategory(res.data)\r\n        })\r\n    },[])\r\n\r\n    const ByCategory=(id)=>{\r\n        getProducts().then(res=>{\r\n            const categories=res.data.filter((items)=>{\r\n                return items.category_id === id ;\r\n            });\r\n            setproduct(categories);\r\n        })\r\n    }\r\n\r\n    const ByColor=(id)=>{\r\n        getProducts().then(res=>{\r\n            const colors=res.data.filter((items)=>{\r\n                return items.color_id === id ;\r\n            });\r\n            setproduct(colors);\r\n        })\r\n\r\n    }\r\n\r\n    const addtoCart = (obj) => {\r\n        console.log(obj.product_name);\r\n        let item = {\r\n            name: obj.product_name,\r\n            image:obj.product_image,\r\n            price: obj.product_cost,\r\n            _id: obj._id,\r\n            quantity: 1,\r\n        };\r\n        if (localStorage.getItem(\"mycart\") !== null) {\r\n            let arr = JSON.parse(localStorage.getItem(\"mycart\"));\r\n            let idArrays = [];\r\n            arr.forEach((data) => {\r\n                idArrays.push(data._id);\r\n            });\r\n\r\n            if (idArrays.includes(obj._id)) {\r\n                // arr.forEach;\r\n                alert(\"Product Already Added\");\r\n                // setItemadded(true);\r\n            } else {\r\n                arr.push(item);\r\n                localStorage.setItem(\"mycart\", JSON.stringify(arr));\r\n                alert(\"Product Added to Cart\");\r\n            }\r\n        } else {\r\n            let arr = [];\r\n            arr.push(item);\r\n            localStorage.setItem(\"mycart\", JSON.stringify(arr));\r\n            alert(\"Product Added to Cart\");\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Nav1/>\r\n            <br></br>\r\n            <div>\r\n        <Col md={2}>\r\n        <Button variant='secondary' onClick={()=>{navigate(\"/products\")}}>All Products</Button>\r\n        <br></br>\r\n        <br></br>\r\n            <Dropdown >\r\n  <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\" >\r\n    Color\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu>\r\n  {color.map((value,index)=>{\r\n      return (\r\n        <Dropdown.Item onClick={()=>ByColor(value._id)} > {value.color_name}</Dropdown.Item>\r\n      )\r\n  })}\r\n   \r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n<br></br>\r\n         <Dropdown >\r\n  <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n    Category\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu>\r\n  { category.map((value,index)=>{\r\n      return(\r\n    <Dropdown.Item onClick={()=>ByCategory(value._id)}>{value.category_name}</Dropdown.Item>\r\n      )\r\n  })}\r\n   \r\n    \r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n</Col>\r\n <Col>\r\n            <h2>Products</h2>\r\n                <Row style={{ justifyContent: \"center\" }}>\r\n                {product.map((value,index) =>{\r\n                    return(\r\n                    \r\n                        <Card style={{ width: \"20rem\", margin: \"1rem\" }} className=\"container\" key={index}>\r\n                           <a href={`/productdetail/${value._id}`}> <Card.Img variant=\"top\" src={value.product_image} height=\"200px\" className='m-2'/> </a>\r\n                            <Card.Body>\r\n                                <Card.Title><a href={`/productdetail/${value._id}`}> {value.product_name} </a></Card.Title>\r\n                                <Card.Text><b>Price:{value.product_cost}/- </b>&nbsp; &nbsp;\r\n                                <br></br>\r\n                                <Button variant=\"primary\" onClick={()=>addtoCart(value)}>Add to cart</Button>\r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Card> )}\r\n                )}\r\n                \r\n                </Row>\r\n                </Col>\r\n            </div>\r\n            <br></br>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Neostore\\clint\\src\\component\\Profile.js",["125"],"D:\\Neostore\\clint\\src\\component\\Cart.js",["126","127","128","129","130"],"import React from 'react';\r\nimport { Button, Container, Table, Form, Row, Col,Card } from \"react-bootstrap\";\r\nimport Nav1 from \"../component/Nav\"\r\nimport Footer from \"../component/Footer\"\r\nimport  { useEffect,  useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n\r\n\r\nexport default function Cart() {\r\n    let token =\r\n        localStorage.getItem(\"_token\") !== undefined\r\n            ? localStorage.getItem(\"_token\")\r\n            : \"\";\r\n    let decode;\r\n    let email;\r\n    if (token !== null) {\r\n        decode = jwt_decode(token);\r\n        email = decode.oid;\r\n    }\r\n\r\n    const proceed = () => {\r\n        if (token !== null) {\r\n            localStorage.setItem(\"subtotal\", amount);\r\n            localStorage.setItem(\"gst\", gst);\r\n            localStorage.setItem(\"total\", grandtotal);\r\n            navigate(\"/checkout\");\r\n        } else {\r\n            alert(\"Login to buy\");\r\n            navigate(\"/login\");\r\n        }\r\n    }\r\n\r\n    let items=[];\r\n    const navigate = useNavigate();\r\n    const [cart, setCart] = useState([]);\r\n    \r\n    let total = [0];\r\n    const [quantity, setQuantity] = useState(\"\");\r\n    useEffect(() => {\r\n        let cartItems = JSON.parse(localStorage.getItem(\"mycart\"));\r\n        setCart(cartItems);\r\n    }, []);\r\n    console.log(cart);\r\n\r\n    const onChangeHandler = (event) => {\r\n        setQuantity(event.target.value);\r\n        console.log(event.target.value);\r\n    };\r\n\r\n    let amount;\r\n    let gst;\r\n    let grandtotal;\r\n\r\n    const onAdd = (product) => {\r\n        const exist = cart.find((item) => item._id === product._id);\r\n        if (exist) {\r\n            setCart(\r\n                cart.map((item) =>\r\n                    item._id === product._id\r\n                        ? { ...exist, quantity: exist.quantity + 1 }\r\n                        : item\r\n                )\r\n            );\r\n            localStorage.setItem(\"mycart\", JSON.stringify(cart));\r\n        } else {\r\n            setCart([...cart, { ...product, quantity: 1 }]);\r\n        }\r\n    };\r\n\r\n    const onRemove = (product) => {\r\n        const exist = cart.find((item) => item._id === product._id);\r\n        if (exist.quantity === 1) {\r\n            // setCart(cart.filter((item) => item._id !== product._id));\r\n        } else {\r\n            setCart(\r\n                cart.map((item) =>\r\n                    item._id === product._id\r\n                        ? { ...exist, quantity: exist.quantity - 1 }\r\n                        : item\r\n                )\r\n            );\r\n            localStorage.setItem(\"mycart\", JSON.stringify(cart));\r\n        }\r\n    };\r\n\r\n    const onDelete = (index) => {\r\n        let lstore = JSON.parse(localStorage.getItem(\"mycart\"));\r\n        lstore.splice(index, 1);\r\n        console.log(lstore);\r\n        let setStore = JSON.stringify(lstore);\r\n        localStorage.setItem(\"mycart\", setStore);\r\n        setCart(lstore);\r\n    };\r\n    return (\r\n        <div>\r\n        <Nav1/>\r\n        <br></br>\r\n        <div>\r\n        <Container style={{ backgroundColor: \"lightgray\" }}>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Sr.No</th>\r\n                            <th>Name</th>\r\n                            <th>Image</th>\r\n                            <th>Price</th>\r\n                            <th>Quantity</th>\r\n                            <th>Total</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {cart\r\n                            ? cart.map((value, index) => {\r\n                                  return (\r\n                                      <tr key={index}>\r\n                                          <td>{index + 1}</td>\r\n                                          <td>{value.name}</td>\r\n                                          <td ><img height=\"100px\" width=\"100px\" src={value.image}/></td>\r\n                                          <td>{value.price}/-</td>\r\n                                          <td>\r\n                                              <Row>\r\n                                                  <Col>\r\n                                                      <Button\r\n                                                          variant=\"dark\"\r\n                                                          onClick={() =>\r\n                                                              onRemove(value)\r\n                                                          }\r\n                                                      >\r\n                                                          -\r\n                                                      </Button>\r\n                                                  </Col>\r\n                                                  <Col>\r\n                                                      <Form.Control\r\n                                                          type=\"number\"\r\n                                                          placeholder=\"Enter quantity\"\r\n                                                          min=\"1\"\r\n                                                          max=\"20\"\r\n                                                          value={value.quantity}\r\n                                                         \r\n                                                      />\r\n                                                  </Col>\r\n                                                  <Col>\r\n                                                      <Button\r\n                                                          variant=\"dark\"\r\n                                                          onClick={() =>\r\n                                                              onAdd(value)\r\n                                                          }\r\n                                                      >\r\n                                                          +\r\n                                                      </Button>\r\n                                                  </Col>\r\n                                              </Row>\r\n                                          </td>\r\n                                          <td>\r\n                                              {value.quantity * value.price}\r\n                                          </td>\r\n                                          <td>\r\n                                              <Button\r\n                                                  variant=\"danger\"\r\n                                                  onClick={() =>\r\n                                                      onDelete(index)\r\n                                                  }\r\n                                              >\r\n                                                  Delete\r\n                                              </Button>\r\n                                          </td>\r\n                                          {console.log(\r\n                                              total.push(\r\n                                                  value.price * value.quantity\r\n                                              )\r\n                                          )}\r\n                                      </tr>\r\n                                  );\r\n                              })\r\n                            : \"\"}\r\n                    </tbody>\r\n                </Table>\r\n               \r\n                \r\n            </Container>\r\n            <Container>\r\n            <Card style={{width:\"20rem\" , margin:\"2rem\", padding:\"1rem\",textAlign:\"right\"}}>\r\n            <h5>Review Order</h5>\r\n            <br/>\r\n            <h6 className=\"text-right\">\r\n                    Subtotal:{\" \"}\r\n                    {(amount=total.reduce((result, number) => result + number)).toFixed(2)}\r\n                </h6>\r\n                <hr/>\r\n                <h6 className=\"text-right\">\r\n                {\" \"}\r\n                    GST 18%:{\" \"}\r\n                   {(gst=(amount * 18 ) / 100).toFixed(2) }\r\n                </h6>\r\n                <hr/>\r\n                <h6 className=\"text-right\">\r\n                     Total:{\" \"}\r\n                   {(grandtotal=(amount + gst).toFixed(2))}\r\n                   {\" \"}\r\n                </h6>\r\n               <br></br>\r\n                <Button variant='dark' onClick={()=>proceed()}>Proceed To Buy</Button>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n        <br></br>\r\n        <Footer/>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Neostore\\clint\\src\\config\\Proservice.js",[],"D:\\Neostore\\clint\\src\\Profilepage\\Address.js",["131"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport Validation from \"../component/Validation\";\r\nimport { addAddress, getUser } from \"../config/Myservices\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport default function Address() {\r\n    const [address, setAddress] = useState([]);\r\n    let token = localStorage.getItem(\"_token\");\r\n    let decode = jwt_decode(token);\r\n    let email = decode.uid;\r\n    console.log(email);\r\n    const formLogin = () => {\r\n        let data = {\r\n            values,\r\n            email,\r\n        };\r\n        addAddress(data).then((res) => {\r\n            if (res.data.flag === 1) {\r\n                alert(res.data.message);\r\n            } else if (res.data.flag === 0) {\r\n                alert(res.data.message);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUser(email).then((res) => {\r\n            \r\n            setAddress(res.data.addresses);\r\n        });\r\n      \r\n    }, []);\r\n\r\n    const { handler, values, errors, handleSubmit } = Validation(formLogin);\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={4}>\r\n                    <Card className='mt-5'>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            Sandesh Umathe\r\n                        </Card.Title>\r\n                        <Card.Img style={{borderRadius:\"50%\", width:\"100px\"} } variant='top' height=\"100px\" src='./products/office2.jpg'/>\r\n                        <br></br>\r\n                        <Card.Link href='/order'>Orders</Card.Link>\r\n                        <br></br>\r\n                        <Card.Link href='/address'>Address</Card.Link>\r\n                        <br></br>\r\n                        <Card.Link href='/profile'>Profile</Card.Link>\r\n                        <br></br>\r\n                        <Card.Link href='/newpass'>Change Password</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <h3>Add Address</h3>\r\n                        <hr />\r\n                        <Form onSubmit={(e) => handleSubmit(e)}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    placeholder=\"Enter address\"\r\n                                    onChange={handler}\r\n                                />\r\n                                <Form.Text>\r\n                                    {errors.address && (\r\n                                        <p\r\n                                            style={{\r\n                                                color: \"red\",\r\n                                                fontWeight: \"bold\",\r\n                                            }}\r\n                                        >\r\n                                            {errors.address}\r\n                                        </p>\r\n                                    )}\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Pincode</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    name=\"pincode\"\r\n                                    placeholder=\"Enter pincode\"\r\n                                    onChange={handler}\r\n                                />\r\n                                <Form.Text>\r\n                                    {errors.pincode && (\r\n                                        <p\r\n                                            style={{\r\n                                                color: \"red\",\r\n                                                fontWeight: \"bold\",\r\n                                            }}\r\n                                        >\r\n                                            {errors.pincode}\r\n                                        </p>\r\n                                    )}\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>City</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"city\"\r\n                                    placeholder=\"Enter City\"\r\n                                    onChange={handler}\r\n                                />\r\n                                <Form.Text>\r\n                                    {errors.city && (\r\n                                        <p\r\n                                            style={{\r\n                                                color: \"red\",\r\n                                                fontWeight: \"bold\",\r\n                                            }}\r\n                                        >\r\n                                            {errors.city}\r\n                                        </p>\r\n                                    )}\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>State</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"state\"\r\n                                    placeholder=\"Enter State\"\r\n                                    onChange={handler}\r\n                                />\r\n                                <Form.Text>\r\n                                    {errors.state && (\r\n                                        <p\r\n                                            style={{\r\n                                                color: \"red\",\r\n                                                fontWeight: \"bold\",\r\n                                            }}\r\n                                        >\r\n                                            {errors.state}\r\n                                        </p>\r\n                                    )}\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Country</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"country\"\r\n                                    placeholder=\"Enter country\"\r\n                                    onChange={handler}\r\n                                />\r\n                                <Form.Text>\r\n                                    {errors.country && (\r\n                                        <p\r\n                                            style={{\r\n                                                color: \"red\",\r\n                                                fontWeight: \"bold\",\r\n                                            }}\r\n                                        >\r\n                                            {errors.country}\r\n                                        </p>\r\n                                    )}\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Add Address\r\n                            </Button>\r\n                        </Form>\r\n                        <br />\r\n                        <h3>Addresses</h3>\r\n                        <hr />\r\n                        {address ? address.map((value, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <Card style={{ width: \"18rem\" }}>\r\n                                        <Card.Body>\r\n                                            <Card.Text>\r\n                                                {value.address}\r\n                                                <br />\r\n                                                {value.city} - {value.pincode}\r\n                                                <br />\r\n                                                {value.state}\r\n                                                <br />\r\n                                                {value.country}\r\n                                            </Card.Text>\r\n                                            <Button variant=\"success\" size=\"sm\">\r\n                                                Edit\r\n                                            </Button>\r\n                                            &nbsp;\r\n                                            <Button variant=\"danger\" size=\"sm\">\r\n                                                Delete\r\n                                            </Button>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                    <br />\r\n                                </div>\r\n                            );\r\n                        }): \" \"}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Neostore\\clint\\src\\Profilepage\\Newpass.js",["132"],"D:\\Neostore\\clint\\src\\component\\Productdetails.js",["133","134","135"],"import React, { useEffect, useState } from 'react'\r\nimport Nav1 from \"./Nav\"\r\nimport Footer from \"./Footer\"\r\nimport {Card,Button,Row,Container,Col} from 'react-bootstrap'\r\nimport { useParams} from 'react-router-dom'\r\nimport { productDetails,getColor } from '../config/Proservice'\r\nimport ReactImageMagnify from \"react-image-magnify\"\r\nimport {ShareFill, Twitter, Whatsapp,Facebook} from \"react-bootstrap-icons\"\r\n\r\n\r\n\r\nexport default function Productdetails() {\r\n    const {id}= useParams();\r\n    const[details,setDetails]= useState([]);\r\n    const[col,setCol]=useState('');\r\n    const [images,setimages]=useState([]);\r\n    const [mImage,setMimage]=useState('');\r\n\r\n    useEffect(()=>{\r\n        productDetails(id).then((res)=>{\r\n            setDetails([res.data]);\r\n            setimages(res.data.subimages)\r\n            setMimage(res.data.product_image)\r\n            getColor(res.data.color_id).then((res)=>{\r\n                setCol(res.data.color_code)\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const addtoCart = (obj) => {\r\n        console.log(obj.product_name);\r\n        let item = {\r\n            name: obj.product_name,\r\n            price: obj.product_cost,\r\n            image: obj.product_image,\r\n            _id: obj._id,\r\n            quantity: 1,\r\n        };\r\n        if (localStorage.getItem(\"mycart\") !== null) {\r\n            let arr = JSON.parse(localStorage.getItem(\"mycart\"));\r\n            let idArrays = [];\r\n            arr.forEach((data) => {\r\n                idArrays.push(data._id);\r\n            });\r\n\r\n            if (idArrays.includes(obj._id)) {\r\n                // arr.forEach;\r\n                alert(\"Product Already Added\");\r\n                // setItemadded(true);\r\n            } else {\r\n                arr.push(item);\r\n                localStorage.setItem(\"mycart\", JSON.stringify(arr));\r\n                alert(\"Product Added to Cart\");\r\n            }\r\n        } else {\r\n            let arr = [];\r\n            arr.push(item);\r\n            localStorage.setItem(\"mycart\", JSON.stringify(arr));\r\n            alert(\"Product Added to Cart\");\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n           <Nav1/>\r\n            <br></br>\r\n            <div>\r\n            <Container style={{textAlign:\"left\"}}>\r\n            {details?\r\n            details.map((item,index)=>{\r\n                return(\r\n                    <div key={index} className='mt-4'>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                {images.map((value,index)=>{\r\n                                    return(\r\n                                        <div className='d-flex' key={index}>\r\n                                        <img src={value} height=\"100px\" width=\"100px\" onClick={()=>setMimage(value)}/>\r\n\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <ReactImageMagnify\r\n                                    {...{\r\n                                        smallImage:{\r\n                                            alt:\"george\",\r\n                                            isFluidWidth:\"true\",\r\n                                            src:mImage,\r\n                                            \r\n                                        },\r\n                                        largeImage:{\r\n                                            src:mImage,\r\n                                            width:1000,\r\n                                            height:1000,\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                            <Col md={5}>\r\n                            \r\n                            \r\n                            <Container style={{textAlign:\"left\",marginLeft:\"50px\"}}>\r\n                            <h2>{item.product_name}</h2>\r\n                            <hr/>\r\n                            <div>\r\n                            <h5>Price:={item.product_cost}/-</h5>\r\n\r\n                             <br/>\r\n                             <h5>Color:=</h5>\r\n                             <svg width={20} height={20}>\r\n                                 <rect width={20} height={20} style={{fill:`${col}`}}/>\r\n                             </svg>\r\n                             <br/>\r\n                             <br/>\r\n                             <h5>Share : <ShareFill/> </h5>\r\n                             \r\n                                 \r\n                                 <Col >\r\n                                     <Whatsapp fontSize=\"30px\" color='green' /> \r\n                                        &nbsp;\r\n                                     <Facebook fontSize=\"30px\"color='blue'/>\r\n                                        &nbsp;\r\n                                      <Twitter fontSize=\"30px\"color='lightblue'/>\r\n                                </Col>\r\n                                     \r\n                                     \r\n                                 \r\n                             \r\n                             \r\n                            </div>\r\n                            <br></br>\r\n                            <Button variant='secondary' onClick={()=>addtoCart(item)}>Add To Cart</Button>\r\n                            &nbsp;\r\n                            <Button variant='primary'>Ratings</Button>\r\n                           \r\n\r\n                            </Container>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </div>\r\n                )\r\n            }):\"\"}\r\n\r\n            </Container>\r\n            </div>\r\n            \r\n            <br></br>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Neostore\\clint\\src\\component\\Order.js",["136","137"],"D:\\Neostore\\clint\\src\\component\\Checkout.js",["138"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Container, Form, Dropdown,Card, Row,Col } from \"react-bootstrap\";\r\nimport Footer from './Footer';\r\nimport Nav1 from './Nav';\r\nimport {getUser} from \"../config/Myservices\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {addOrder} from \"../config/Proservice\"\r\nimport {addCart} from \"../config/Myservices\"\r\nimport jwt_decode from \"jwt-decode\"\r\nimport Validation from './Validation';\r\nimport DropdownItem from 'react-bootstrap/esm/DropdownItem';\r\n\r\n\r\nexport default function Checkout() {\r\n    const nav= useNavigate();\r\n    const[selected,setSelected]= useState([]);\r\n    const[address,setAddress]=useState([]);\r\n    let token = localStorage.getItem(\"_token\");\r\n    let decode= jwt_decode(token);\r\n    let email=decode.uid;\r\n\r\n    let subtotal=JSON.parse(localStorage.getItem(\"subtotal\"));\r\n    let gst=JSON.parse(localStorage.getItem(\"gst\"));\r\n    let total=JSON.parse(localStorage.getItem(\"total\"));\r\n    let cart1=JSON.parse(localStorage.getItem(\"mycart\"));\r\n\r\n    const formLogin = () => {\r\n        let data = {\r\n            email,\r\n            total,\r\n            subtotal,\r\n            gst,\r\n            values,\r\n            selected,\r\n            cart1,\r\n        };\r\n    \r\n\r\n    addOrder(data).then((res)=>{\r\n        if (res.data.flag===1){\r\n            localStorage.removeItem(\"mycart\");\r\n            localStorage.removeItem(\"total\");\r\n            localStorage.removeItem(\"gst\");\r\n            localStorage.removeItem(\"subtotal\");\r\n            let cart=[];\r\n            let data={\r\n                email,cart,\r\n            };\r\n            addCart(data).then((res)=>{});\r\n            alert(\"Your Order Placed Successfully\");\r\n            nav('/');\r\n\r\n        }\r\n    })\r\n\r\n};\r\n\r\nconst {handler,values,errors,handleSubmit}= Validation(formLogin);\r\n\r\nconst display = (value)=>{\r\n    let deliveryAddress= \r\n    value.address +\r\n    \",\"+\r\n    value.city+\r\n    \",\"+\r\n    value.pincode+\r\n    \",\"+\r\n    value.state +\r\n    \",\"+\r\n    value.country;\r\n    setSelected(deliveryAddress);\r\n\r\n};\r\n\r\nuseEffect(()=>{\r\n\r\n    getUser(email).then((res)=>{\r\n        console.log(res.data)\r\n        setAddress(res.data.addresses);\r\n    })\r\n},[]);\r\nconsole.log(address)\r\n\r\n    return (\r\n        <div>\r\n\r\n        <Nav1/>\r\n        <br></br>\r\n        <div>\r\n        <Container>\r\n        <Dropdown >\r\n  <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\" >\r\n  {selected.length===0\r\n  ? \"Select Address\"\r\n  : selected}\r\n\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu style={{overflowY:\"scroll\", maxHeight:\"400px\"}}>\r\n  \r\n      \r\n        <Dropdown.Item\r\n        onClick={()=>nav(\"/address\")}>Address</Dropdown.Item>\r\n\r\n        {address.map((value,index)=>{\r\n            return(\r\n                <div key={index}>\r\n                    <DropdownItem \r\n                    onClick={()=>display(value)}\r\n                    className='dropdown-item'>\r\n\r\n                    {value.address},{value.city} -{\" \"}\r\n                    {value.pincode},{value.state}{\" \"},\r\n                    {value.country}\r\n\r\n                    </DropdownItem>\r\n                </div>\r\n            )\r\n        })}\r\n \r\n   \r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n        </Container>\r\n<br/>\r\n\r\n<Container >\r\n<Row >\r\n<Col md={6}>\r\n            <Card style={{width:\"20rem\" , margin:\"2rem\", padding:\"1rem\"}}>\r\n            <h5>Review Order</h5>\r\n            <br/>\r\n            <h6 className=\"text-right\">\r\n                    Subtotal:{subtotal.toFixed(2)}\r\n                   \r\n                </h6>\r\n                <hr/>\r\n                <h6 className=\"text-right\">\r\n                    GST 18%:{gst.toFixed(2)}\r\n                   {/*  {total.reduce((result, number) => result + number)} */}\r\n                </h6>\r\n                <hr/>\r\n                <h6 className=\"text-right\">\r\n                    Order Total:{total.toFixed(2)}\r\n                   \r\n                </h6>\r\n\r\n                        \r\n                </Card>\r\n                </Col>\r\n                <Col md={6}>\r\n                <Form.Label style={{fontWeight:\"bold\"}}>Credit Card Number</Form.Label>\r\n                <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"Enter credit card details\"\r\n                    name='card'\r\n                    onChange={handler}\r\n                />\r\n                <Form.Text>\r\n                    {errors.card &&(\r\n                        <p style={{color:\"red\",fontWeight:\"bold\",\r\n                        }}\r\n                    \r\n                    >\r\n                    {errors.card}\r\n                    </p>\r\n                    )}\r\n                </Form.Text>\r\n                <br />\r\n                <Button variant='success'\r\n                onClick={(e)=>handleSubmit(e)}>\r\n                    Confirm And Buy\r\n                </Button>\r\n                </Col>\r\n             </Row> \r\n            </Container>\r\n           \r\n            <br></br>\r\n        </div>\r\n       \r\n        <Footer/>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Neostore\\clint\\src\\component\\Invoice.js",["139"],"D:\\Neostore\\clint\\src\\component\\Validation.js",["140","141"],"import React, { useState } from \"react\";\r\nconst Validation = (callback) => {\r\n    const [values, setValues] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const regForName = /^[a-zA-Z]{2,100}$/;\r\n    const regForCity = /^[a-zA-Z]{3,100}$/;\r\n    const regForEmail = RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\r\n    const regForPassword = RegExp(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z])(?!.*\\s).{8,25}$/\r\n    );\r\n    const regforContact = RegExp(/^[0-9]{10}$/);\r\n    const regforCard = RegExp(/^[0-9]{16}$/);\r\n    const regforAddress = RegExp(/^[a-zA-Z0-9\\s,./'-]{3,}$/);\r\n    const regforPincode = RegExp(/^\\d{6}$/);\r\n\r\n    const validate = (event, name, value) => {\r\n        switch (name) {\r\n            case \"fname\":\r\n                errors.fname = regForName.test(value)\r\n                    ? \"\"\r\n                    : \"Name must have atleast 2 characters\";\r\n                break;\r\n            case \"lname\":\r\n                errors.lname = regForName.test(value)\r\n                    ? \"\"\r\n                    : \"Name must have atleast 2 characters\";\r\n                break;\r\n            case \"email\":\r\n                errors.email = regForEmail.test(value)\r\n                    ? \"\"\r\n                    : \"Enter Valid Email\";\r\n                break;\r\n            case \"mobile\":\r\n                errors.mobile = regforContact.test(value)\r\n                    ? \"\"\r\n                    : \"Enter valid Contact Number\";\r\n                break;\r\n            case \"password\":\r\n                errors.password = regForPassword.test(value)\r\n                    ? \"\"\r\n                    : \"Password must be between 8-25 characters and should contain atleast one lowercase letter, one uppercase letter and one special character\";\r\n                break;\r\n            case \"cpassword\":\r\n                errors.cpassword =\r\n                    document.getElementById(\"password\").value === value\r\n                        ? \"\"\r\n                        : \"Password and confirm password should be same\";\r\n                break;\r\n            case \"address\":\r\n                errors.address = regforAddress.test(value)\r\n                    ? \"\"\r\n                    : \"Adress must contain minimum 3 characters\";\r\n                break;\r\n            case \"pincode\":\r\n                errors.pincode = regforPincode.test(value)\r\n                    ? \"\"\r\n                    : \"Pincode must be 6 digits\";\r\n                break;\r\n            case \"city\":\r\n                errors.city = regForCity.test(value)\r\n                    ? \"\"\r\n                    : \"City name must be minimum 3 characters\";\r\n                break;\r\n            case \"state\":\r\n                errors.state = regForCity.test(value)\r\n                    ? \"\"\r\n                    : \"State name must be minimum 3 characters\";\r\n                break;\r\n            case \"country\":\r\n                errors.country = regForCity.test(value)\r\n                    ? \"\"\r\n                    : \"Country name must be minimum 3 characters\";\r\n                break;\r\n\r\n            case \"card\":\r\n                errors.card = regforCard.test(value)\r\n                    ? \"\"\r\n                    : \"Card Number Should be 16 digits\";\r\n                break;\r\n\r\n            default:\r\n                alert(\"Fill proper details\");\r\n        }\r\n    };\r\n\r\n    const validating_error = (errors) => {\r\n        let valid = true;\r\n        Object.values(errors).forEach(\r\n            (values) => values.length > 0 && (valid = false)\r\n        );\r\n        return valid;\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (validating_error(errors)) {\r\n            callback();\r\n        } else {\r\n            alert(\"There is an error\");\r\n        }\r\n    };\r\n\r\n    const handler = (event) => {\r\n        event.persist();\r\n\r\n        let name = event.target.name;\r\n        let val = event.target.value;\r\n        validate(event, name, val);\r\n        setValues({\r\n            ...values,\r\n            [name]: val,\r\n        });\r\n    };\r\n\r\n    return {\r\n        values,\r\n        errors,\r\n        handler,\r\n        handleSubmit,\r\n    };\r\n};\r\n\r\nexport default Validation;\r\n",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":12},{"ruleId":"146","severity":1,"message":"150","line":18,"column":8,"nodeType":"148","messageId":"149","endLine":18,"endColumn":12},{"ruleId":"146","severity":1,"message":"151","line":11,"column":9,"nodeType":"148","messageId":"149","endLine":11,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":84,"column":23,"nodeType":"154","messageId":"155","endLine":84,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":90,"column":22,"nodeType":"154","messageId":"155","endLine":90,"endColumn":24},{"ruleId":"146","severity":1,"message":"156","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"157","line":2,"column":34,"nodeType":"148","messageId":"149","endLine":2,"endColumn":39},{"ruleId":"158","severity":1,"message":"159","line":25,"column":4,"nodeType":"160","endLine":25,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":26,"column":4,"nodeType":"160","endLine":26,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":27,"column":4,"nodeType":"160","endLine":27,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":28,"column":4,"nodeType":"160","endLine":28,"endColumn":16},{"ruleId":"146","severity":1,"message":"161","line":6,"column":14,"nodeType":"148","messageId":"149","endLine":6,"endColumn":20},{"ruleId":"146","severity":1,"message":"162","line":6,"column":25,"nodeType":"148","messageId":"149","endLine":6,"endColumn":33},{"ruleId":"146","severity":1,"message":"163","line":13,"column":12,"nodeType":"148","messageId":"149","endLine":13,"endColumn":16},{"ruleId":"146","severity":1,"message":"164","line":13,"column":17,"nodeType":"148","messageId":"149","endLine":13,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":20,"column":7,"nodeType":"167","endLine":20,"endColumn":9,"suggestions":"168"},{"ruleId":"146","severity":1,"message":"169","line":20,"column":9,"nodeType":"148","messageId":"149","endLine":20,"endColumn":14},{"ruleId":"146","severity":1,"message":"170","line":35,"column":9,"nodeType":"148","messageId":"149","endLine":35,"endColumn":14},{"ruleId":"146","severity":1,"message":"171","line":40,"column":12,"nodeType":"148","messageId":"149","endLine":40,"endColumn":20},{"ruleId":"146","severity":1,"message":"172","line":47,"column":11,"nodeType":"148","messageId":"149","endLine":47,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":121,"column":48,"nodeType":"160","endLine":121,"endColumn":101},{"ruleId":"165","severity":1,"message":"166","line":33,"column":8,"nodeType":"167","endLine":33,"endColumn":10,"suggestions":"175"},{"ruleId":"146","severity":1,"message":"176","line":26,"column":30,"nodeType":"148","messageId":"149","endLine":26,"endColumn":36},{"ruleId":"146","severity":1,"message":"177","line":4,"column":9,"nodeType":"148","messageId":"149","endLine":4,"endColumn":13},{"ruleId":"165","severity":1,"message":"178","line":28,"column":7,"nodeType":"167","endLine":28,"endColumn":9,"suggestions":"179"},{"ruleId":"173","severity":1,"message":"174","line":77,"column":41,"nodeType":"160","endLine":77,"endColumn":119},{"ruleId":"146","severity":1,"message":"180","line":24,"column":17,"nodeType":"148","messageId":"149","endLine":24,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":28,"column":7,"nodeType":"167","endLine":28,"endColumn":9,"suggestions":"181"},{"ruleId":"165","severity":1,"message":"166","line":81,"column":3,"nodeType":"167","endLine":81,"endColumn":5,"suggestions":"182"},{"ruleId":"165","severity":1,"message":"178","line":20,"column":8,"nodeType":"167","endLine":20,"endColumn":10,"suggestions":"183"},{"ruleId":"146","severity":1,"message":"184","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"185","line":4,"column":20,"nodeType":"148","messageId":"149","endLine":4,"endColumn":29},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Nav1' is defined but never used.","'navigate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'image' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'Dropdown' is defined but never used.","'item' is assigned a value but never used.","'setitem' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.","ArrayExpression",["188"],"'email' is assigned a value but never used.","'items' is assigned a value but never used.","'quantity' is assigned a value but never used.","'onChangeHandler' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["189"],"'errors' is assigned a value but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["190"],"'ele' is assigned a value but never used.",["191"],["192"],["193"],"'React' is defined but never used.","'setErrors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"194","fix":"196"},{"desc":"197","fix":"198"},{"desc":"194","fix":"199"},{"desc":"194","fix":"200"},{"desc":"197","fix":"201"},"Update the dependencies array to be: [email]",{"range":"202","text":"203"},{"range":"204","text":"203"},"Update the dependencies array to be: [id]",{"range":"205","text":"206"},{"range":"207","text":"203"},{"range":"208","text":"203"},{"range":"209","text":"206"},[647,649],"[email]",[1014,1016],[988,990],"[id]",[830,832],[2199,2201],[690,692]]