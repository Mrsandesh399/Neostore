{"ast":null,"code":"var _jsxFileName = \"D:\\\\Neostore\\\\clint\\\\src\\\\Profilepage\\\\Address.js\",\n    _s = $RefreshSig$();\n\nimport jwtDecode from 'jwt-decode';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\nimport { addAddressService } from '../config/Myservices';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { IoCloseCircle } from \"react-icons/io5\";\nimport Swal from 'sweetalert2';\nimport Nav1 from '../component/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst regForAddress = RegExp(/^([A-Za-z]|[0-9]|[\\w\\s])+$/);\nconst regForPincode = RegExp(/^[1-9][0-9]{5}/);\nconst regForName = RegExp(/^[a-zA-Z]/);\nexport default function Address() {\n  _s();\n\n  const [add, setadd] = useState({});\n  const [state, setstate] = useState({\n    addresses: [],\n    address: '',\n    city: '',\n    pincode: '',\n    states: '',\n    country: '',\n    flag1: true,\n    flag2: false,\n    index: null\n  });\n  const [show, setShow] = useState(false);\n  const [showAddressModal, setShowAddressModal] = useState(false);\n  const [errors, seterrors] = useState({\n    erraddress: '',\n    errpincode: '',\n    errcity: '',\n    errstates: '',\n    errcountry: ''\n  });\n  useEffect(() => {\n    if (localStorage.getItem('_token') != undefined) {\n      let token = localStorage.getItem('_token');\n      let decode = jwtDecode(token);\n      console.log(decode);\n      setadd(decode);\n      setstate({ ...state,\n        addresses: decode.addresses\n      });\n      console.log(state);\n    }\n  }, []);\n\n  const handleClose = () => {\n    setShow(false);\n    setstate({ ...state,\n      address: '',\n      city: '',\n      pincode: '',\n      states: '',\n      country: ''\n    });\n  };\n\n  const handleCloseAddresss = () => setShowAddressModal(false);\n\n  const addAddress = () => {\n    const email = add.email;\n\n    if (state.address != '' && state.city != '' && state.pincode != '' && state.states != '' && state.country != '') {\n      let formData = {\n        address: state.address,\n        pincode: parseInt(state.pincode),\n        city: state.city,\n        states: state.states,\n        country: state.country\n      };\n\n      if (state.addresses.find(ele => JSON.stringify(ele) === JSON.stringify(formData)) === undefined) {\n        let data = state.addresses;\n        data.push(formData);\n        setstate({ ...state,\n          addresses: data,\n          flag1: true,\n          address: '',\n          city: '',\n          pincode: '',\n          states: '',\n          country: ''\n        }, () => console.log(\"updateddd\"));\n        addAddressService({\n          data: data,\n          email\n        }).then(res => {\n          localStorage.setItem(\"_token\", res.data.token);\n        });\n      } else {\n        // alert(\"Address already addedd\")\n        Swal.fire({\n          icon: 'warning',\n          title: 'Oops...',\n          text: 'Address Already Added'\n        });\n      }\n\n      setShowAddressModal(false);\n    }\n  };\n\n  const handler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case \"address\":\n        let error1 = regForAddress.test(value) ? \"\" : \"Invalid Address\";\n        seterrors({ ...errors,\n          erraddress: error1\n        });\n        break;\n\n      case \"pincode\":\n        let error2 = regForPincode.test(value) ? \"\" : \"Invalid Pincode\";\n        seterrors({ ...errors,\n          errpincode: error2\n        });\n        break;\n\n      case \"city\":\n        let error3 = regForName.test(value) ? \"\" : \"Invalid City\";\n        seterrors({ ...errors,\n          errcity: error3\n        });\n        break;\n\n      case \"states\":\n        let error4 = regForName.test(value) ? \"\" : \"Invalid State\";\n        seterrors({ ...errors,\n          errstates: error4\n        });\n        break;\n\n      case \"country\":\n        let error5 = regForName.test(value) ? \"\" : \"Invalid Country\";\n        seterrors({ ...errors,\n          errcountry: error5\n        });\n        break;\n    }\n\n    setstate({ ...state,\n      [name]: value\n    });\n  };\n\n  const editAddress = (ele, index) => {\n    setShow(true);\n    setstate({ ...state,\n      flag2: true,\n      index: index,\n      address: ele.address,\n      city: ele.city,\n      pincode: ele.pincode,\n      states: ele.states,\n      country: ele.country\n    });\n  };\n\n  const updateAddress = () => {\n    let data = state.addresses;\n    let formData = {\n      address: state.address,\n      city: state.city,\n      pincode: state.pincode,\n      states: state.states,\n      country: state.country\n    };\n    data[state.index] = formData;\n    setstate({ ...state,\n      addresses: data,\n      flag2: false,\n      address: '',\n      city: '',\n      pincode: '',\n      states: '',\n      country: ''\n    });\n    addAddressService({\n      data: state.addresses,\n      email: add.email\n    }).then(res => {\n      localStorage.setItem(\"_token\", res.data.token);\n    });\n    setShow(false);\n  };\n\n  const deleteaddress = index => {\n    let data = state.addresses;\n    data.splice(index, 1);\n    setstate({ ...state,\n      addresses: data\n    }, () => console.log(\"deleteddd\"));\n    addAddressService({\n      data: data,\n      email: add.email\n    }).then(res => {\n      localStorage.setItem(\"_token\", res.data.token);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4 d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          background: \" linear-gradient(#a0d6b4 , #5f9ea0)\",\n          width: \"80%\",\n          color: \"navy\",\n          maxHeight: '70vh',\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"text-blue\",\n            style: {\n              fontFamily: \"Oswald\",\n              fontSize: \"2rem\"\n            },\n            children: \"Addresses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), state.addresses.map((ele, index) => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"my-3\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [ele.address, \", \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 51\n                    }, this), ele.city, \" - \", ele.pincode, \", \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 53\n                    }, this), ele.states, \" - \", ele.country]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-right\",\n                    children: /*#__PURE__*/_jsxDEV(CancelIcon, {\n                      onClick: () => deleteaddress(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 30\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => editAddress(ele, index),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => {\n              setShowAddressModal(true);\n            },\n            children: \"Add New Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IoCloseCircle, {\n          onClick: handleClose,\n          className: \"close\",\n          style: {\n            width: \"5rem\",\n            height: \"4rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\"Address : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: state.address,\n          onChange: e => setstate({ ...state,\n            address: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 27\n        }, this), \"City : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: state.city,\n          onChange: e => setstate({ ...state,\n            city: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 24\n        }, this), \"Pincode : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: state.pincode,\n          onChange: e => setstate({ ...state,\n            pincode: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 27\n        }, this), \"State : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: state.states,\n          onChange: e => setstate({ ...state,\n            states: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), \"Country : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: state.country,\n          onChange: e => setstate({ ...state,\n            country: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => updateAddress(),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAddressModal,\n      onHide: handleCloseAddresss,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          style: {\n            color: \"navy\",\n            fontFamily: \"Lusitana\"\n          },\n          children: \"Add Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IoCloseCircle, {\n          onClick: handleCloseAddresss,\n          className: \"close\",\n          style: {\n            width: \"5rem\",\n            height: \"4rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        style: {\n          background: \" linear-gradient(#a0d6b4 , #5f9ea0)\",\n          width: \"80%\",\n          fontFamily: \"Lusitana\"\n        },\n        children: [\"Address : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"address\",\n          value: state.address,\n          onChange: handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: errors.erraddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 74\n        }, this), \"City : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"city\",\n          value: state.city,\n          onChange: handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: errors.errcity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 71\n        }, this), \"Pincode : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"pincode\",\n          value: state.pincode,\n          onChange: handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: errors.errpincode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 74\n        }, this), \"State : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"states\",\n          value: state.states,\n          onChange: handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: errors.errstates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 73\n        }, this), \"Country : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"country\",\n          value: state.country,\n          onChange: handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: errors.errcountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => addAddress(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Address, \"PxCN3kbJztFTq21quXdk3f3a2DM=\");\n\n_c = Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["D:/Neostore/clint/src/Profilepage/Address.js"],"names":["jwtDecode","React","useEffect","useState","Button","Card","Modal","addAddressService","CancelIcon","IoCloseCircle","Swal","Nav1","regForAddress","RegExp","regForPincode","regForName","Address","add","setadd","state","setstate","addresses","address","city","pincode","states","country","flag1","flag2","index","show","setShow","showAddressModal","setShowAddressModal","errors","seterrors","erraddress","errpincode","errcity","errstates","errcountry","localStorage","getItem","undefined","token","decode","console","log","handleClose","handleCloseAddresss","addAddress","email","formData","parseInt","find","ele","JSON","stringify","data","push","then","res","setItem","fire","icon","title","text","handler","event","name","value","target","error1","test","error2","error3","error4","error5","editAddress","updateAddress","deleteaddress","splice","background","width","color","maxHeight","overflow","fontFamily","fontSize","map","height","e"],"mappings":"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","sourcesContent":["import jwtDecode from 'jwt-decode';\r\nimport React, {useEffect, useState} from 'react'\r\nimport { Button, Card,Modal } from 'react-bootstrap'\r\nimport { addAddressService } from '../config/Myservices';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport { IoCloseCircle } from \"react-icons/io5\";\r\nimport Swal from 'sweetalert2'\r\nimport Nav1 from '../component/Nav'\r\nconst regForAddress = RegExp(/^([A-Za-z]|[0-9]|[\\w\\s])+$/);\r\nconst regForPincode = RegExp(/^[1-9][0-9]{5}/);\r\nconst regForName = RegExp(/^[a-zA-Z]/);\r\n\r\nexport default function Address() {\r\n    const [add, setadd] = useState({})\r\n    const [state, setstate] = useState({addresses:[] ,address:'' , city:'', pincode:'', states:'', country:'', flag1:true, flag2: false, index: null})\r\n    const [show, setShow] = useState(false)\r\n    const [showAddressModal, setShowAddressModal] = useState(false);\r\n    const [errors, seterrors] = useState({erraddress:'', errpincode:'', errcity:'', errstates:'', errcountry:''})\r\n\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('_token')!= undefined){\r\n            let token = localStorage.getItem('_token');\r\n            let decode = jwtDecode(token)\r\n            console.log(decode)\r\n            setadd(decode)\r\n            setstate({...state, addresses:decode.addresses})\r\n            console.log(state);\r\n        }\r\n       },[])\r\n\r\n    const handleClose = () => {\r\n    setShow(false);\r\n    setstate({ ...state, address: '', city: '', pincode: '', states: '', country: '' })\r\n    }\r\n\r\n    const handleCloseAddresss = () => setShowAddressModal(false);\r\n\r\n    const addAddress = () => {\r\n        const email= add.email;\r\n        if(state.address !='' && state.city != '' && state.pincode !='' &&  state.states != '' && state.country !=''){\r\n            let formData={\r\n                address: state.address,\r\n                pincode:parseInt(state.pincode),\r\n                city:state.city,\r\n                states: state.states,\r\n                country:state.country\r\n            }\r\n    \r\n            if(state.addresses.find(ele=> JSON.stringify(ele)===JSON.stringify(formData)) === undefined){\r\n                let data = state.addresses\r\n                data.push(formData)\r\n                setstate({...state, addresses:data, flag1:true, address:'' , city:'', pincode:'', states:'', country:''}, ()=>console.log(\"updateddd\"))\r\n                addAddressService({data:data, email})\r\n                .then(res =>{\r\n                    localStorage.setItem(\"_token\",res.data.token);\r\n                })\r\n            }\r\n            else{\r\n                // alert(\"Address already addedd\")\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'Oops...',\r\n                    text: 'Address Already Added',\r\n                  })\r\n            }\r\n            setShowAddressModal(false)\r\n        }\r\n        \r\n    }\r\n\r\n    const handler = (event) =>{\r\n        const { name, value } = event.target;\r\n\r\n        switch(name){\r\n            case \"address\":\r\n                let error1 = regForAddress.test(value) ? \"\" : \"Invalid Address\";\r\n                seterrors({ ...errors, erraddress: error1 });\r\n                break;\r\n\r\n            case \"pincode\":\r\n                let error2 = regForPincode.test(value) ? \"\" : \"Invalid Pincode\";\r\n                seterrors({ ...errors, errpincode: error2 });\r\n                break;\r\n\r\n            case \"city\":\r\n                let error3 = regForName.test(value) ? \"\" : \"Invalid City\";\r\n                seterrors({ ...errors, errcity: error3 });\r\n                break;\r\n\r\n            case \"states\":\r\n                let error4 = regForName.test(value) ? \"\" : \"Invalid State\";\r\n                seterrors({ ...errors, errstates: error4 });\r\n                break;\r\n\r\n            case \"country\":\r\n                let error5 = regForName.test(value) ? \"\" : \"Invalid Country\";\r\n                seterrors({ ...errors, errcountry: error5 });\r\n                break;\r\n        }\r\n        setstate({...state, [name]: value})\r\n    }\r\n\r\n    const editAddress = (ele, index) => {\r\n        setShow(true)\r\n        setstate({...state, flag2:true, index:index, address:ele.address , city:ele.city, pincode:ele.pincode, states:ele.states, country:ele.country })\r\n    }\r\n\r\n    const updateAddress = () => {\r\n        let data = state.addresses\r\n        let formData={\r\n            address: state.address,\r\n            city:state.city,\r\n            pincode:state.pincode,\r\n            states: state.states,\r\n            country:state.country\r\n        }\r\n        data[state.index] = formData\r\n        setstate({...state, addresses:data, flag2:false, address:'' , city:'', pincode:'', states:'', country:'' })\r\n        addAddressService({data:state.addresses, email:add.email})\r\n          .then(res =>{\r\n            localStorage.setItem(\"_token\",res.data.token);\r\n          })\r\n          setShow(false)\r\n    }\r\n\r\n    const deleteaddress = (index) => {\r\n        let data = state.addresses\r\n        data.splice(index, 1)\r\n\r\n        setstate({...state, addresses:data}, ()=>console.log(\"deleteddd\"))\r\n        addAddressService({data:data, email:add.email})\r\n        .then(res =>{\r\n          localStorage.setItem(\"_token\",res.data.token);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='my-4 d-flex justify-content-center'>\r\n            <Card style={{background:\" linear-gradient(#a0d6b4 , #5f9ea0)\",width:\"80%\",color:\"navy\",maxHeight:'70vh',overflow:'auto'}}>\r\n                <Card.Body>\r\n                    <Card.Title className='text-blue' style={{fontFamily:\"Oswald\",fontSize:\"2rem\"}}>\r\n                        Addresses\r\n                    </Card.Title>\r\n                    <hr/>\r\n\r\n                    {state.addresses.map((ele,index)=>\r\n                    <Card className='my-3'>\r\n                        \r\n                        <Card.Body>\r\n                        <div className='row'>\r\n                        <div className='col'>\r\n                        <Card.Text>{ele.address}, <br/>\r\n                        {ele.city} - {ele.pincode}, <br/>\r\n                        {ele.states} - {ele.country} \r\n                        </Card.Text>\r\n                        </div>\r\n                \r\n                            <div className='col'>\r\n                            <div className='text-right'>\r\n                             <CancelIcon onClick={()=>deleteaddress(index)}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                        <div className='mt-2'>\r\n                        <Button onClick={()=>editAddress(ele, index)}>Edit</Button>\r\n                        </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    )}\r\n                    <hr/>\r\n                    <button className='btn' onClick={()=>{setShowAddressModal(true)}}>Add New Address</button>  \r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header >\r\n          <Modal.Title>Edit Address</Modal.Title>\r\n          <IoCloseCircle onClick={handleClose} className=\"close\" style={{ width: \"5rem\", height: \"4rem\" }} />\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n                Address : <input type=\"text\" className='form-control' value={state.address} onChange={e => setstate({ ...state, address: e.target.value })} />\r\n\r\n                City : <input type=\"text\" className='form-control' value={state.city} onChange={e => setstate({ ...state, city: e.target.value })} />\r\n\r\n                Pincode : <input type=\"text\" className='form-control' value={state.pincode} onChange={e => setstate({ ...state, pincode: e.target.value })} />\r\n\r\n                State : <input type=\"text\" className='form-control' value={state.states} onChange={e => setstate({ ...state, states: e.target.value })} />\r\n\r\n                Country : <input type=\"text\" className='form-control' value={state.country} onChange={e => setstate({ ...state, country: e.target.value })} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => updateAddress()}>\r\n           Update\r\n          </Button>\r\n        </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal show={showAddressModal} onHide={handleCloseAddresss}>\r\n        <Modal.Header >\r\n          <Modal.Title style={{color:\"navy\",fontFamily: \"Lusitana\"}}>Add Address</Modal.Title>\r\n          <IoCloseCircle onClick={handleCloseAddresss} className=\"close\" style={{ width: \"5rem\", height: \"4rem\" }} />\r\n        </Modal.Header>\r\n        <Modal.Body style={{background:\" linear-gradient(#a0d6b4 , #5f9ea0)\",width: \"80%\",fontFamily: \"Lusitana\"}}>\r\n                Address : <input type=\"text\" className='form-control' name=\"address\" value={state.address} onChange={handler} />\r\n                <span className=\"text-danger\">{errors.erraddress}</span> <br/>\r\n                City : <input type=\"text\" className='form-control' name=\"city\" value={state.city} onChange={handler} />\r\n                <span className=\"text-danger\">{errors.errcity}</span> <br/>\r\n                Pincode : <input type=\"text\" className='form-control'name=\"pincode\" value={state.pincode} onChange={handler} />\r\n                <span className=\"text-danger\">{errors.errpincode}</span> <br/>\r\n                State : <input type=\"text\" className='form-control' name=\"states\" value={state.states} onChange={handler} />\r\n                <span className=\"text-danger\">{errors.errstates}</span> <br/>\r\n                Country : <input type=\"text\" className='form-control'name=\"country\" value={state.country} onChange={handler} />\r\n                <span className=\"text-danger\">{errors.errcountry}</span> <br/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => addAddress()}>\r\n           Add\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}